/*
 * Generated by Bluespec Compiler, version 2016.07.beta1 (build 34806, 2016-07-05)
 * 
 * On Mon Nov 26 15:37:33 UTC 2018
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkTb.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkTb::MODEL_mkTb()
{
  mkTb_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkTb()
{
  MODEL_mkTb *model = new MODEL_mkTb();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkTb &INST_top = *((MOD_mkTb *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d54;
	 tUInt8 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d58;
	 tUInt8 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2___d13;
	 tUInt8 DEF_INST_top_DEF_NOT_start_wire_whas__4_5_OR_NOT_start_wire_wge_ETC___d18;
	 tUInt8 DEF_INST_top_DEF_NOT_abort_whas__1_3_OR_NOT_abort_wget__2_4___d35;
	 tUInt8 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d42;
	 tUInt8 DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d41;
	 tUInt8 DEF_INST_top_DEF_abort_wget____d12;
	 tUInt8 DEF_INST_top_DEF_abort_whas____d11;
	 tUInt8 DEF_INST_top_DEF_start_reg__h9025;
	 tUInt8 DEF_INST_top_DEF_running__h9130;
	 tUInt8 DEF_INST_top_DEF_start_wire_wget____d16;
	 tUInt8 DEF_INST_top_DEF_start_wire_whas____d14;
	 tUInt8 DEF_INST_top_DEF_start_reg_1__h7720;
	 tUInt8 DEF_INST_top_DEF_state_fired__h7722;
	 tUInt8 DEF_INST_top_DEF_state_mkFSMstate_read____d38;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_start_reg__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_start_reg__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_state_handle_abort;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_state_handle_abort;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_state_fired__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_state_fired__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_state_every;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_state_every;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_restart;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_restart;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_action_l13c9;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_action_l17c9;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_action_l20c9;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_idle_l12c15;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_idle_l12c15;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_fsm_start;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_fsm_start;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_auto_start;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_auto_start;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_auto_finish;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_auto_finish;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE___me_check_6;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE___me_check_6;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE___me_check_7;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE___me_check_7;
	 DEF_INST_top_DEF_state_mkFSMstate_read____d38 = INST_top.INST_state_mkFSMstate.METH_read();
	 DEF_INST_top_DEF_abort_whas____d11 = INST_top.INST_abort.METH_whas();
	 DEF_INST_top_DEF_abort_wget____d12 = INST_top.INST_abort.METH_wget();
	 DEF_INST_top_DEF_NOT_abort_whas__1_3_OR_NOT_abort_wget__2_4___d35 = !DEF_INST_top_DEF_abort_whas____d11 || !DEF_INST_top_DEF_abort_wget____d12;
	 DEF_INST_top_DEF_CAN_FIRE_RL_action_l17c9 = DEF_INST_top_DEF_NOT_abort_whas__1_3_OR_NOT_abort_wget__2_4___d35 && DEF_INST_top_DEF_state_mkFSMstate_read____d38 == (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_action_l17c9 = DEF_INST_top_DEF_CAN_FIRE_RL_action_l17c9;
	 DEF_INST_top_DEF_CAN_FIRE_RL_action_l20c9 = DEF_INST_top_DEF_NOT_abort_whas__1_3_OR_NOT_abort_wget__2_4___d35 && DEF_INST_top_DEF_state_mkFSMstate_read____d38 == (tUInt8)2u;
	 INST_top.DEF_WILL_FIRE_RL_action_l20c9 = DEF_INST_top_DEF_CAN_FIRE_RL_action_l20c9;
	 DEF_INST_top_DEF_state_fired__h7722 = INST_top.INST_state_fired.METH_read();
	 DEF_INST_top_DEF_start_reg_1__h7720 = INST_top.INST_start_reg_1.METH_read();
	 DEF_INST_top_DEF_running__h9130 = INST_top.INST_running.METH_read();
	 DEF_INST_top_DEF_start_reg__h9025 = INST_top.INST_start_reg.METH_read();
	 DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d41 = DEF_INST_top_DEF_state_mkFSMstate_read____d38 == (tUInt8)3u;
	 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2___d13 = DEF_INST_top_DEF_abort_whas____d11 && DEF_INST_top_DEF_abort_wget____d12;
	 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d42 = (DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2___d13 || DEF_INST_top_DEF_state_mkFSMstate_read____d38 == (tUInt8)0u) || DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d41;
	 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d54 = DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d42 && (!DEF_INST_top_DEF_start_reg_1__h7720 || DEF_INST_top_DEF_state_fired__h7722);
	 DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d58 = DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d54 && !DEF_INST_top_DEF_start_reg__h9025;
	 DEF_INST_top_DEF_CAN_FIRE_RL_auto_finish = DEF_INST_top_DEF_running__h9130 && DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d58;
	 DEF_INST_top_DEF_WILL_FIRE_RL_auto_finish = DEF_INST_top_DEF_CAN_FIRE_RL_auto_finish;
	 DEF_INST_top_DEF_CAN_FIRE_RL_auto_start = DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d58 && !DEF_INST_top_DEF_running__h9130;
	 DEF_INST_top_DEF_WILL_FIRE_RL_auto_start = DEF_INST_top_DEF_CAN_FIRE_RL_auto_start;
	 DEF_INST_top_DEF_CAN_FIRE_RL_fsm_start = DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d54 && DEF_INST_top_DEF_start_reg__h9025;
	 DEF_INST_top_DEF_WILL_FIRE_RL_fsm_start = DEF_INST_top_DEF_CAN_FIRE_RL_fsm_start;
	 DEF_INST_top_DEF_CAN_FIRE_RL_restart = (DEF_INST_top_DEF_start_reg_1__h7720 && !DEF_INST_top_DEF_state_fired__h7722) && DEF_INST_top_DEF_NOT_abort_whas__1_3_OR_NOT_abort_wget__2_4___d35;
	 DEF_INST_top_DEF_WILL_FIRE_RL_restart = DEF_INST_top_DEF_CAN_FIRE_RL_restart;
	 DEF_INST_top_DEF_CAN_FIRE_RL_start_reg__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_start_reg__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_start_reg__dreg_update;
	 DEF_INST_top_DEF_CAN_FIRE___me_check_6 = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE___me_check_6 = DEF_INST_top_DEF_CAN_FIRE___me_check_6;
	 DEF_INST_top_DEF_CAN_FIRE_RL_state_every = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_state_every = DEF_INST_top_DEF_CAN_FIRE_RL_state_every;
	 DEF_INST_top_DEF_CAN_FIRE___me_check_7 = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE___me_check_7 = DEF_INST_top_DEF_CAN_FIRE___me_check_7;
	 DEF_INST_top_DEF_CAN_FIRE_RL_state_fired__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_state_fired__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_state_fired__dreg_update;
	 if (INST_top.DEF_WILL_FIRE_RL_action_l17c9)
	   INST_top.RL_action_l17c9();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l20c9)
	   INST_top.RL_action_l20c9();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_auto_start)
	   INST_top.RL_auto_start();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_restart)
	   INST_top.RL_restart();
	 if (DEF_INST_top_DEF_WILL_FIRE___me_check_7)
	   INST_top.__me_check_7();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_fsm_start)
	   INST_top.RL_fsm_start();
	 DEF_INST_top_DEF_start_wire_whas____d14 = INST_top.INST_start_wire.METH_whas();
	 DEF_INST_top_DEF_start_wire_wget____d16 = INST_top.INST_start_wire.METH_wget();
	 DEF_INST_top_DEF_CAN_FIRE_RL_action_l13c9 = ((DEF_INST_top_DEF_start_wire_whas____d14 && DEF_INST_top_DEF_start_wire_wget____d16) && DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2_3_OR_state_mkF_ETC___d42) && !(DEF_INST_top_DEF_CAN_FIRE_RL_action_l20c9 || DEF_INST_top_DEF_CAN_FIRE_RL_action_l17c9);
	 INST_top.DEF_WILL_FIRE_RL_action_l13c9 = DEF_INST_top_DEF_CAN_FIRE_RL_action_l13c9;
	 DEF_INST_top_DEF_NOT_start_wire_whas__4_5_OR_NOT_start_wire_wge_ETC___d18 = !DEF_INST_top_DEF_start_wire_whas____d14 || !DEF_INST_top_DEF_start_wire_wget____d16;
	 DEF_INST_top_DEF_CAN_FIRE_RL_idle_l12c15 = (DEF_INST_top_DEF_NOT_start_wire_whas__4_5_OR_NOT_start_wire_wge_ETC___d18 && (DEF_INST_top_DEF_NOT_abort_whas__1_3_OR_NOT_abort_wget__2_4___d35 && DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d41)) && !(DEF_INST_top_DEF_CAN_FIRE_RL_action_l20c9 || DEF_INST_top_DEF_CAN_FIRE_RL_action_l17c9);
	 DEF_INST_top_DEF_WILL_FIRE_RL_idle_l12c15 = DEF_INST_top_DEF_CAN_FIRE_RL_idle_l12c15;
	 DEF_INST_top_DEF_CAN_FIRE_RL_state_handle_abort = (DEF_INST_top_DEF_abort_whas__1_AND_abort_wget__2___d13 && DEF_INST_top_DEF_NOT_start_wire_whas__4_5_OR_NOT_start_wire_wge_ETC___d18) && !((DEF_INST_top_DEF_CAN_FIRE_RL_action_l20c9 || DEF_INST_top_DEF_CAN_FIRE_RL_action_l17c9) || DEF_INST_top_DEF_CAN_FIRE_RL_restart);
	 DEF_INST_top_DEF_WILL_FIRE_RL_state_handle_abort = DEF_INST_top_DEF_CAN_FIRE_RL_state_handle_abort;
	 if (INST_top.DEF_WILL_FIRE_RL_action_l13c9)
	   INST_top.RL_action_l13c9();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_auto_finish)
	   INST_top.RL_auto_finish();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_start_reg__dreg_update)
	   INST_top.RL_start_reg__dreg_update();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_state_handle_abort)
	   INST_top.RL_state_handle_abort();
	 if (DEF_INST_top_DEF_WILL_FIRE___me_check_6)
	   INST_top.__me_check_6();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_idle_l12c15)
	   INST_top.RL_idle_l12c15();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_state_every)
	   INST_top.RL_state_every();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_state_fired__dreg_update)
	   INST_top.RL_state_fired__dreg_update();
	 INST_top.INST_state_fired_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_state_overlap_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_state_set_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_abort.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_start_reg_2.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_start_wire.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_tx_c1.clk((tUInt8)1u, (tUInt8)1u);
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_tx_c1.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_fh.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_start_reg.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_start_reg_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_mkFSMstate.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_fired.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_can_overlap.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_running.rst_tick__clk__1((tUInt8)1u);
	 }
       };
static void schedule_posedge_tx_c1$CLK_OUT(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkTb &INST_top = *((MOD_mkTb *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_tx_bitInteration;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_tx_bitInteration;
	 DEF_INST_top_DEF_CAN_FIRE_RL_tx_bitInteration = INST_top.INST_tx_data_fifo.METH_i_notEmpty() && INST_top.INST_tx_data_fifo.METH_notEmpty();
	 DEF_INST_top_DEF_WILL_FIRE_RL_tx_bitInteration = DEF_INST_top_DEF_CAN_FIRE_RL_tx_bitInteration;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_tx_bitInteration)
	   INST_top.RL_tx_bitInteration();
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_tx_data_fifo.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_tx_count.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkTb::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkTb_instance = new MOD_mkTb(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  bk_get_or_define_clock(sim_hdl, "tx_c1$CLK_OUT");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "tx_c1$CLK_OUT"),
			schedule_posedge_tx_c1$CLK_OUT,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkTb_instance->INST_tx_c1.set_clk_1)("CLK");
  (mkTb_instance->INST_start_wire.set_clk_0)("CLK");
  (mkTb_instance->INST_start_reg_2.set_clk_0)("CLK");
  (mkTb_instance->INST_abort.set_clk_0)("CLK");
  (mkTb_instance->INST_state_set_pw.set_clk_0)("CLK");
  (mkTb_instance->INST_state_overlap_pw.set_clk_0)("CLK");
  (mkTb_instance->INST_state_fired_1.set_clk_0)("CLK");
  (mkTb_instance->set_clk_0)("CLK");
  (mkTb_instance->INST_tx_c1.set_clk_0)("tx_c1$CLK_OUT");
  (mkTb_instance->INST_tx_data_fifo.set_clk_0)("tx_c1$CLK_OUT");
  (mkTb_instance->set_clk_1)("tx_c1$CLK_OUT");
}
void MODEL_mkTb::destroy_model()
{
  delete mkTb_instance;
  mkTb_instance = NULL;
}
void MODEL_mkTb::reset_model(bool asserted)
{
  (mkTb_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkTb::get_instance()
{
  return mkTb_instance;
}

/* Fill in version numbers */
void MODEL_mkTb::get_version(unsigned int *year,
			     unsigned int *month,
			     char const **annotation,
			     char const **build)
{
  *year = 2016u;
  *month = 7u;
  *annotation = "beta1";
  *build = "34806";
}

/* Get the model creation time */
time_t MODEL_mkTb::get_creation_time()
{
  
  /* Mon Nov 26 15:37:33 UTC 2018 */
  return 1543246653llu;
}

/* Control run-time licensing */
tUInt64 MODEL_mkTb::skip_license_check()
{
  return 0llu;
}

/* State dumping function */
void MODEL_mkTb::dump_state()
{
  (mkTb_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkTb & mkTb_backing(tSimStateHdl simHdl)
{
  static MOD_mkTb *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkTb(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkTb::dump_VCD_defs()
{
  (mkTb_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkTb::dump_VCD(tVCDDumpType dt)
{
  (mkTb_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkTb_backing(sim_hdl));
}
